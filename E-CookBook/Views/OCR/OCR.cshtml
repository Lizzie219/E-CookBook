@{
    ViewData["Title"] = "Create Recipe with OCR";

}

<h2>Upload File</h2>
<form enctype="multipart/form-data">

</form>
<div class="form-group col">
    <label for="file">Choose file to upload</label>
    <input type="file" class="form-control-file" id="ingredientsFile" name="ingredientsFile">
    <img id="ingredientsFileDisplay" src="#" alt="Image preview..." style="display:none;" />
</div>
<div class="form-group col">
    <label for="file">Choose file to upload</label>
    <input type="file" class="form-control-file" id="instructionsFile" name="instructionsFile">
    <img id="instructionsFileDisplay" src="#" alt="Image preview..." style="display:none;" />
</div>
<button id="cropAndUploadBtn" class="btn btn-primary">Crop and Upload</button>


<script>
    // initializing cropper
    window.addEventListener('DOMContentLoaded', function () {
        var ingredientsFile = document.getElementById('ingredientsFile');
        var ingredientsImage = document.getElementById('ingredientsFileDisplay');
        //var ingredientsCropper;

        var instructionsFile = document.getElementById('instructionsFile');
        var instructionsImage = document.getElementById('instructionsFileDisplay');
        //var instructionsCropper;

        function setUpCropper(input, image, cropper) {
            input.addEventListener('change', function (e) {
                var files = e.target.files;
                var done = function (url) {
                    //input.value = '';
                    image.src = url;
                    image.style.display = 'block';
                    if (window[cropper]) {
                        window[cropper].destroy();
                    }
                    window[cropper] = new Cropper(image, {
                        // more cropper options could come here like ratios - may come in handy later
                    });
                };

                if (files && files.length > 0) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        done(reader.result);
                    };
                    reader.readAsDataURL(files[0]);
                }
            });
        }

        setUpCropper(ingredientsFile, ingredientsImage, "ingredientsCropper");
        setUpCropper(instructionsFile, instructionsImage, "instructionsCropper");

        var cropAndUploadBtn = document.getElementById('cropAndUploadBtn');

        cropAndUploadBtn.addEventListener('click', function () {
            // Example for the first image; repeat for the second image if needed
            var ingredientsCanvas = ingredientsCropper.getCroppedCanvas();
            var instructionsCanvas = instructionsCropper.getCroppedCanvas();
            var formData = new FormData();

            ingredientsCanvas.toBlob(function (blobIngredients) {
                formData.append('ingredientsImage', blobIngredients, 'ingredientsImage.png');
            });

            instructionsCanvas.toBlob(function (blobInstructions) {
                formData.append('instructionsImage', blobInstructions, 'instructionsImage.png');
            });

            // Use fetch or XMLHttpRequest to send the formData to the server
            fetch('/OCR/ProcessImages', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    //if (response.redirected) {
                    //    window.location.href = response.url;
                    //} else 
                    if (!response.ok) {
                        throw new Error('Network response was not ok: ' + response.status);
                    }
                    return response.text();
                })
                .catch(error => console.error('Error:', error));

        });
    });

</script>
