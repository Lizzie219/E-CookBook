@model IPagedList<E_CookBook.Models.Recipe>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <b> Search Option:</b>
    <div>
        <input class="form-check-input" type="radio" name="option" id="flexRadioName" value="Title" checked />
        <label class="form-check-label" for="flexRadioName">Recipe Title</label>
    </div>
    <div>
        <input class="form-check-input" type="radio" name="option" value="Ingredient" id="flexRadioIngredient" />
        <label class="form-check-label" for="flexRadioIngredient">Ingredient</label>
    </div>
    <input type="text" name="searchParameter" id="searchParameter" />
    <input type="submit" name="submit" value="Search" />
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CookingTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Portion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Instructions)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Source)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Category.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().PriceCategory.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="7"> No Recipe with the given parameters </td>
            </tr>
        }
        else
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CookingTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Portion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Instructions)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Source)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PriceCategory.Name)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
@Html.PagedListPager(Model,pageNumber => Url.Action("Index",new{ pageNumber}))
