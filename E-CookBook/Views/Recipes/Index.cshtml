@model IPagedList<E_CookBook.Models.Recipe>

@{
    ViewData["Title"] = "Index";
    string searchParameter = ViewBag.SearchParameter;
    string option = ViewBag.Option;
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <b> Search Option:</b>
    <div>
        <input class="form-check-input" type="radio" asp-for="@option" value="Title" checked />
        <label class="form-check-label">Recipe Title</label>
    </div>
    <div>
        <input class="form-check-input" type="radio" asp-for="@option" value="Ingredient"/>
        <label class="form-check-label">Ingredient</label>
    </div>
    <input type="text" asp-for="@searchParameter" />
    <input type="submit" name="submit" value="Search" />
</form>
<br />
<button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#filersDiv" aria-expanded="false" aria-controls="filersDiv">
    Filters
</button>
<div class="collapse" id="filersDiv">
    <div class="card card-body">
        <div id="CategorySelect">
            @foreach (var item in ViewBag.Categories)                                   
            {
                <a>
                    <input type="checkbox" asp-for="@item" /> 
                </a>
                <label asp-for="@item"></label>
            }
        </div>
    </div>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().CookingTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Portion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Instructions)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Source)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Category.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().PriceCategory.Name)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="7"> No Recipe with the given parameters </td>
            </tr>
        }
        else
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CookingTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Portion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Instructions)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Source)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PriceCategory.Name)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<nav>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { option = option,
    searchParameter = searchParameter,  pageNumber = page }), new PagedListRenderOptions()
    {
    ActiveLiElementClass = "active",
    PageClasses = new[]{ "page-link"},
    LiElementClasses=new[] { "page-item" },
    UlElementClasses = new[] { "pagination","justify-content-center", "mt-3" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always
    })
</nav>
