@model E_CookBook.Models.Recipe

@{
    ViewData["Title"] = "Create";
    List<IngredientViewModel> existingIngredients = (List<IngredientViewModel>)ViewBag.ExistingIngredients;
}

<h1>Create a Recipe</h1>

<hr />
<div class="container">
    <form asp-action="Create" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Category.Name" class="control-label"></label>
                    <select asp-for="CategoryID" class="form-control" asp-items="ViewBag.Categories">
                        <option value="" disabled selected>Select an Option</option>
                    </select>
                    <span asp-validation-for="CategoryID" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="PriceCategory.Name" class="control-label"></label>
                    <select asp-for="PriceCategoryID" class="form-control" asp-items="ViewBag.PriceCategories">
                        <option value="" disabled selected>Select an Option</option>
                    </select>
                    <span asp-validation-for="PriceCategoryID" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Portion" class="control-label"></label>
                    <input asp-for="Portion" class="form-control" />
                    <span asp-validation-for="Portion" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CookingTime" class="control-label"></label>
                    <input asp-for="CookingTime" class="form-control" />
                    <span asp-validation-for="CookingTime" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Source" class="control-label"></label>
                    <input asp-for="Source" class="form-control" />
                    <span asp-validation-for="Source" class="text-danger"></span>
                </div>
                <div>
                    <input id="IngredientCount" name="IngredientCount" hidden />
                    <table id="ingredientsTable">
                        <tr>
                            <th>Section</th>
                            <th>Quantiy</th>
                            <th>Metric</th>
                            <th>Name</th>
                            <th></th>
                        </tr>
                    </table>
                    <div class="form-group">
                        <button id="addIngrButton" type="button" onclick="addIngredientSpecification()">Add Ingredient</button>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="form-group">
                    <div class="row">
                        <div class="col-12 d-flex justify-content-center">
                            <img id="recipePhotoDisplay" src="~/lib/Images/NoPhoto.png" alt="Image of the result" class="recipe-photo-styles" />
                        </div>
                    </div>
                    <label class="control-label">Add a photo</label>
                    <input id="RecipePhoto" name="RecipePhoto" type="file" accept="image/jpeg, image/png, image/gif" class="form-control" onchange="manageUploadedPhoto(this, event)" />
                </div>
                <div class="form-group">
                    <label asp-for="Instructions" class="control-label"></label>
                    <textarea asp-for="Instructions" class="form-control"></textarea>
                    <span asp-validation-for="Instructions" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Tags" class="control-label"></label>
                    <input asp-for="Tags" class="form-control" hidden />
                    <div id="tagBadgeList">
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="form-group">
            <input type="submit" value="Create" />
        </div>
        <br />
        <br />
    </form>
    <div>
        <div class="form-group">
            <input type="text" id="tagInput" onkeydown="tagInputKeyDown(event)" placeholder="Add a tag...">
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        await Html.RenderPartialAsync("CustomModals");
    }
    }

    <script>
        var ingredientCount = 0;
        document.loaded = afterLoad();

        function afterLoad() {
            manageIngredients();
            manageInstructions();
        }

        function manageInstructions() {
            var existingInstructions = @Html.Raw(JsonConvert.SerializeObject(ViewBag.ExistingInstructions));
            if (existingInstructions != null) {
                document.getElementById("Instructions").value = existingInstructions;
            }
        }

        function manageIngredients() {
            var existingIngredientsList = @Html.Raw(JsonConvert.SerializeObject(existingIngredients));
            if (existingIngredientsList != null) {
                for (var i = 0; i < existingIngredientsList.length; i++) {
                    addIngredientSpecification();
                    loadBaseIngredientValues(existingIngredientsList[i], ingredientCount);
                }
            }
            else {
                // makes sure that there is at least one line of the table
                addIngredientSpecification();
            }
        }

        function addIngredientSpecification() {
            ingredientCount++;
            document.getElementById("IngredientCount").value = ingredientCount;

            var table = document.getElementById("ingredientsTable");
            var newRow = table.insertRow();

            var sectionCell = newRow.insertCell(0);
            var metricCell = newRow.insertCell(1);
            var metricNameCell = newRow.insertCell(2);
            var nameCell = newRow.insertCell(3);
            var deleteCell = newRow.insertCell(4);

            var deleteButton = document.createElement("button");
            deleteButton.type = "button";
            deleteButton.classList += "btn-close";
            deleteButton.addEventListener('click', function () {
                // Get the button's parent <td> element and then its parent <tr> element
                var row = deleteButton.parentElement.parentElement;

                // Remove the <tr> element (row) from the table
                row.parentNode.removeChild(row);
            });

            sectionCell.appendChild(createInput("text", "Section", ingredientCount));
            nameCell.appendChild(createInput("text", "IngredientName", ingredientCount));
            metricCell.appendChild(createInput("number", "Metric", ingredientCount));
            metricNameCell.appendChild(createInput("text", "MetricName", ingredientCount));
            deleteCell.appendChild(deleteButton);
        }
    </script>
