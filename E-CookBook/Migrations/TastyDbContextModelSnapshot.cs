// <auto-generated />
using System;
using E_CookBook.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_CookBook.Migrations
{
    [DbContext(typeof(TastyDbContext))]
    partial class TastyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_CookBook.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Soup"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Appetizer"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Main Course"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Salad"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Drink"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Dessert"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Side Dish"
                        });
                });

            modelBuilder.Entity("E_CookBook.Models.Ingredient", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Ingredient");
                });

            modelBuilder.Entity("E_CookBook.Models.IngredientSpecification", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IngredientID")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("QuantityMetricID")
                        .HasColumnType("int");

                    b.Property<int>("RecipeID")
                        .HasColumnType("int");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("IngredientID");

                    b.HasIndex("QuantityMetricID");

                    b.HasIndex("RecipeID");

                    b.ToTable("IngredientSpecification");
                });

            modelBuilder.Entity("E_CookBook.Models.PriceCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PriceCategory");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "The total cost of the ingredients is below 3000 Ft.",
                            Name = "Inexpensive"
                        },
                        new
                        {
                            ID = 2,
                            Description = "The total cost of the ingredients is between 3001 and 6000 Ft.",
                            Name = "Moderate"
                        },
                        new
                        {
                            ID = 3,
                            Description = "The total cost of the ingredients is over 6001 Ft.",
                            Name = "Inexpensive"
                        });
                });

            modelBuilder.Entity("E_CookBook.Models.QuantityMetric", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("QuantityMetric");
                });

            modelBuilder.Entity("E_CookBook.Models.Recipe", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("CookingTime")
                        .HasColumnType("int");

                    b.Property<string>("Instructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Portion")
                        .HasColumnType("int");

                    b.Property<int>("PriceCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("PriceCategoryID");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("E_CookBook.Models.IngredientSpecification", b =>
                {
                    b.HasOne("E_CookBook.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CookBook.Models.QuantityMetric", "QuantityMetric")
                        .WithMany()
                        .HasForeignKey("QuantityMetricID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CookBook.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("QuantityMetric");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("E_CookBook.Models.Recipe", b =>
                {
                    b.HasOne("E_CookBook.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_CookBook.Models.PriceCategory", "PriceCategory")
                        .WithMany()
                        .HasForeignKey("PriceCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("PriceCategory");
                });

            modelBuilder.Entity("E_CookBook.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
